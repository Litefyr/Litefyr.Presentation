prototype(Litefyr.Presentation:Block.ColorSchemeSwitchter) < prototype(Neos.Fusion:Component) {
    @propTypes {
        class = ${PropTypes.anyOf( PropTypes.string, PropTypes.arrayOf( PropTypes.string ) )}
        left = ${PropTypes.boolean}
        bottom = ${PropTypes.boolean}
    }

    icons = Neos.Fusion:DataStructure {
        light = Litefyr.Presentation:Atom.Icon {
            icon = 'scheme-light'
        }
        dark = Litefyr.Presentation:Atom.Icon {
            icon = 'scheme-dark'
        }
        system = Litefyr.Presentation:Atom.Icon {
            icon = 'scheme-system'
        }
    }

    bottom = false
    text = Neos.Fusion:Map {
        items = ${['light', 'dark', 'system']}
        keyRenderer = ${item}
        itemRenderer = ${Translation.translate('colorSchemeSwitchter.' + item, null, [], 'Main', 'Litefyr.Presentation')}
    }
    @private.buttonContent = afx`
        <Neos.Fusion:Augmenter class="hidden light:block" content={props.icons.light} />
        <Neos.Fusion:Augmenter class="hidden dark:block" content={props.icons.dark} />
    `

    renderer = afx`
        <Litefyr.Presentation:Block.Popover
            attributes.x-data={AlpineJS.object({theme: AlpineJS.expression("localStorage.theme||'system'"), open: false, text: props.text})}
            attributes.class={[props.left && !props.bottom && "order-first", props.class]}
            buttonAttributes."x-on:set-mode.window"="theme=$event.detail"
            buttonAttributes.x-tooltip
            buttonAttributes.:aria-label="text[theme]"
            buttonAttributes.class={[props.bottom ? "min-w-9 min-h-9 max-w-9 max-h-9 hover:ring-4" : "min-w-12 min-h-12 max-w-12 max-h-12 hover:ring-8", "rounded-full transform transition-all ring-0 !ring-opacity-30 duration-200 ring-text focus:outline-none focus:ring-4 focus-visible:!ring-opacity-100"]}
            buttonContent={private.buttonContent}
            position={props.bottom ? 'bottom' : null}
        >
            <Neos.Fusion:Loop items={['light', 'dark', 'system']}>
                <Litefyr.Presentation:Block.Popover.ListItem
                    closePopoverOnClick={true}
                    attributes.x-on:click={AlpineJS.function("setMode", item)}
                    attributes.:class={"theme=='" + item + "'&&'font-bold'"}
                    content={props.icons[item] + props.text[item]}
                />
            </Neos.Fusion:Loop>
        </Litefyr.Presentation:Block.Popover>
    `
}
