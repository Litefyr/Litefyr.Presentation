prototype(Litefyr.Presentation:Block.Text) < prototype(Neos.Fusion:Component) {
    @propTypes {
        headline = ${PropTypes.string}
        label = ${PropTypes.string}
        lead = ${PropTypes.string}
        content = ${PropTypes.string}
        links = ${PropTypes.string}
        isFirstElement = ${PropTypes.boolean}
        textClass = ${PropTypes.anyOf( PropTypes.string, PropTypes.arrayOf( PropTypes.string ) )}
        headlineClass = ${PropTypes.anyOf( PropTypes.string, PropTypes.arrayOf( PropTypes.string ) )}
        class = ${PropTypes.anyOf( PropTypes.string, PropTypes.arrayOf( PropTypes.string ) )}
        theme = ${PropTypes.oneOf(['main', 'minor', 'minor2', 'gray', 'default', ''])}
        position = ${PropTypes.oneOf(['left', 'right', 'veryLeft', 'veryRight', ''])}
        columns = ${PropTypes.oneOf([1, 2, 3, 4])}
    }

    @styleguide {
        props {
            headline = Sitegeist.ChitChat:Line {
                length = 80
            }
            label = Sitegeist.ChitChat:Line {
                length = 10
            }
            lead = Sitegeist.ChitChat:Line
            content = afx`
                <Sitegeist.ChitChat:P />
                <Sitegeist.ChitChat:UL />
                <hr />
                <Sitegeist.ChitChat:OL />
                <Sitegeist.ChitChat:H2 />
                <Sitegeist.ChitChat:P />
                <blockquote>
                    <Sitegeist.ChitChat:P />
                </blockquote>
                <Sitegeist.ChitChat:H3 />
                <Sitegeist.ChitChat:P />
                <Sitegeist.ChitChat:H4 />
                <Sitegeist.ChitChat:P />
                <Sitegeist.ChitChat:H2 />
                <Sitegeist.ChitChat:H3 />
                <Sitegeist.ChitChat:H4 />
                <Sitegeist.ChitChat:P />
            `
        }
    }

    isFirstElement = false
    colorGradient = null

    textClass = 'has-prose prose w-full'
    headlineClass = 'has-prose prose headline-alignment'
    inBackend = false
    columns = 1
    enableHeadline = false
    headlineFontSize = 0
    headlineFontSizeShift = 2
    padding = true
    setWidth = true

    @if.hasProps = ${this.content || this.links}

    @private {
        breakoutMap = Neos.Fusion:DataStructure {
            1 = 'default'
            2 = 'wide'
            3 = 'wide'
            4 = 'full'
            veryLeft = 'wide'
            veryRight = 'wide'
            right = 'default'
            left = 'default'
        }
        columns = Neos.Fusion:Match {
            @subject = ${props.columns}
            @default = ''
            2 = 'has-columns @3xl/text:columns-2'
            3 = 'has-columns @3xl/text:columns-2 @5xl/text:columns-3'
            4 = 'has-columns @3xl/text:columns-2 @7xl/text:columns-3 @8xl/text:columns-4'
        }
        themePadding = ${props.theme ? 'py-[--content-space-half]' : null}
        position = ${private.columns ? null : props.position}
    }
    backgroundAugmenter = ${!this.theme && this.columns < 2}

    renderer = afx`
        <Litefyr.Presentation:Background
            theme={props.theme}
            augmenter={props.backgroundAugmenter}
            tailwind={[private.columns && '@container/text', props.class]}
            animationText={props.animationText}
        >
            <Litefyr.Presentation:Spacing
                augmenter={!private.position}
                width={props.setWidth ? private.position ? private.breakoutMap[private.position] : private.breakoutMap[props.columns] : false}
                padding={props.padding}
                tailwind={[private.themePadding, private.position && 'lg:grid lg:grid-cols-2 lg:gap-[--element-gap]']}
                colorGradient={props.colorGradient}
            >
                <Carbon.Eel:Tag
                    tagName={private.position ? 'div' : null}
                    attributes.class={private.position == 'right' || private.position == 'veryRight' ? 'lg:col-start-2' : null}
                >
                    <Litefyr.Presentation:Atom.HeadlineAndLabel
                        @if={props.enableHeadline}
                        isFirstElement={props.isFirstElement}
                        class={props.headlineClass}
                        fontSize={props.headlineFontSize}
                        fontSizeShift={props.headlineFontSizeShift}
                        enableTypewriter={false}
                        label={props.label}
                        content={props.headline}
                        marginBottom={props.lead || props.content || props.links}
                    />
                    <div
                        class={Tailwind.merge(props.enableHeadline && props.headline ? "mt-0" : null, private.columns, props.textClass)}
                    >
                        <p @if={props.lead} class="lead">
                            {Presentation.typewriter(props.lead, !props.inBackend, 'text-theme-accent')}
                        </p>
                        {props.content}
                        <Neos.Fusion:Augmenter @if={private.columns && props.links} class="column-span-all @3xl/text:mt-8">
                            {props.links}
                        </Neos.Fusion:Augmenter>
                        {private.columns ? "" : props.links}
                    </div>
                </Carbon.Eel:Tag>
            </Litefyr.Presentation:Spacing>
        </Litefyr.Presentation:Background>
    `
}
