prototype(Litefyr.Presentation:Atom.ButtonAndLink.Fragment.Attributes) < prototype(Neos.Fusion:Component) {
    @propTypes {
        class = ${PropTypes.anyOf( PropTypes.string, PropTypes.arrayOf( PropTypes.string ) )}
        groupClass = ${PropTypes.anyOf( PropTypes.string, PropTypes.arrayOf( PropTypes.string ) )}
        appearance = ${PropTypes.oneOf(['main', 'minor', 'minor2', 'ghost', 'link', 'nested'])}
        inline = ${PropTypes.boolean}
        bigArea = ${PropTypes.boolean}
    }

    appearance = 'minor'
    inline = true
    class = null

    @private.appearance = Neos.Fusion:Match {
        @subject = ${props.appearance}
        @default = 'theme'
        ghost = 'ghost'
        link = 'link'
    }

    renderer = afx`
        <Neos.Fusion:DataStructure
            @ignoreProperties={['appearance', 'inline', 'main', 'minor', 'minor2', 'ghost', 'link', 'nested', 'icon', 'enableIcon', 'groupClass', 'bigArea']}
            {...props}
            data-theme={props.appearance == 'ghost' ? false : props.appearance}
            class={Carbon.String.classNames(BEM.modifier('btn', [private.appearance, props.inline ? 'inline' : 'block', props.bigArea && 'big-area']), Tailwind.merge("not-prose", props.groupClass, props.class))}
        />
    `
}
